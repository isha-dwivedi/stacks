//linked list
#include <iostream>

using namespace std;

class node{
 
  public:
  int data;
  node * next;
  node(){
  	data = 0;
  	next=NULL;
  }
};

class LinkedList{
	public:
	node * head;

    
	//constructor
	LinkedList(){
	head=NULL;

	}
    
	//insert
    
    
	void insertAt( int value){
    node * temp= new node;
    
    if(head!=NULL){     
   	 temp->data=value;
   	 temp->next=head;
   	 head=temp;

   	 
    }
else{
   	 head=temp;
   	 head->data=value;
   	 head->next=NULL;

    }
   	 
	}
	
	// Deletes the element(or node) at the position pos)
	void Deleteat(){
	    if(head==NULL)
	    {cout<<"stack underflow";}
	    else{
	    node * temp;
	    temp=head;
	   head=head->next;
	    delete temp;
	    }
	    
    
    
	}

	//display
	void display(){
    	node *current=head;
    	//loop to keep moving to next node
    	while(current!=NULL){
   	 
    	cout<<current->data<<"-<";
    	current=current->next;//the access moves to next node
    
    	}
    	cout<<endl;
	 
	}
	//to count
	void count(){
    	node *current=head;
    	int i=0;
    	//loop to keep moving to next node
    	while(current!=NULL){
    	i++;
    	current=current->next;//the access moves to next node
    
    	}
    	cout<<"the total no. of elements in the linkes list is"<<i<<endl;
   	 
	}
    
};

class stack{

public:
LinkedList l;
 void push(){
 l.insertAt(1);
 l.insertAt(2);
 l.insertAt(3);
 l.insertAt(8);
}
void disp(){ l.display(); }

void pop(){
    l.Deleteat();
}
void cnt(){
    l.count();
}


};
int main()
{
   
	stack s;
    s.push();
    s.disp();
     s.cnt();
    s.pop();
     s.disp();
     s.cnt();
    
   return 0;
}
